sudo: required
dist: trusty
group: deprecated-2017Q4
os: linux
language: minimal
cache:
  directories:
  - depends/built
  - depends/sdk-sources
  - depends/sources
  - $HOME/.ccache
env:
  global:
    - MAKEJOBS=-j1
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
  matrix:
# Win32
    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386"  PACKAGES="sshpass python3 nsis g++-mingw-w64-i686 bc" GOAL="deploy" BITCOIN_CONFIG="--with-gui --without-libs --disable-bench --disable-tests --disable-extended-rpc-tests --enable-reduce-exports"
# bitcoind
    - HOST=x86_64-unknown-linux-gnu PACKAGES="sshpass bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" GOAL="install" BITCOIN_CONFIG=" --without-libs --disable-bench --disable-tests --disable-extended-rpc-tests --disable-gui --enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER"
# Cross-Mac
    - HOST=x86_64-apple-darwin11 PACKAGES="sshpass cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev" BITCOIN_CONFIG=" --without-libs --disable-bench --disable-tests --disable-extended-rpc-tests --enable-gui --enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"

before_install:
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")

install:
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade $PACKAGES; fi

before_script:
    - unset CC; unset CXX
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS

script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - ./configure $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib

after_success:
    # search for win32 install package, if found, export its full path.
    - export WIN32PKG=$(find $TRAVIS_BUILD_DIR/ -type f -iname "*-*-setup.exe"    -exec readlink -f \{\} \; ); echo Win32InstallPackage is "$WIN32PKG"
    - export OSXPKG=$(find $TRAVIS_BUILD_DIR/   -type f -iname "*-Core.dmg" -exec readlink -f \{\} \; ); echo OSXInstallPackage is "$OSXPKG"
    - if ! "$TRAVIS_PULL_REQUEST" && "$TRAVIS_SECURE_ENV_VARS" && [ -f "$WIN32PKG" ] ; then mkdir -p $OUTDIR; cp -f "$WIN32PKG" $OUTDIR; fi
    - if ! "$TRAVIS_PULL_REQUEST" && "$TRAVIS_SECURE_ENV_VARS" && [ -f "$OSXPKG"   ] ; then mkdir -p $OUTDIR; cp -f "$OSXPKG" $OUTDIR; fi
    - if ! "$TRAVIS_PULL_REQUEST" && "$TRAVIS_SECURE_ENV_VARS" && [ -d $OUTDIR     ] ; then export TARBALL=$(basename $OUTDIR); tar czf ./$TARBALL.tar.gz -C $OUTDIR . && (sudo sshpass -p "$SCP_PASSWORD" scp -o "StrictHostKeyChecking no" -o "UserKnownHostsFile /dev/null" -P "$SCP_PORT" ./$TARBALL.tar.gz "$SCP_USER@$SCP_HOST:$SCP_PATH" ; rm -rf ./$TARBALL.tar.gz && echo "Successfully Upload $TARBALL.tar.gz"); fi

after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
